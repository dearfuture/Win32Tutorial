#include<windows.h> 


//自定义的窗口过程
LRESULT  CALLBACK    MyWindowProc(HWND hWnd, UINT Msg,
	WPARAM wParam, LPARAM lParam)
{
	switch (Msg)
	{
	case WM_DESTROY:
		PostQuitMessage(0);//可以使GetMessage返回0    
		return 0;

	case WM_PAINT:
	{ 
		//1.使用BeginPaint，它能将无效区域变成有效（如果存在无效区域，系统会一直发送WM_PAINT）
		/*PAINTSTRUCT  ps;
		HDC  hdc = BeginPaint(hWnd, &ps);
		TextOut(hdc, 0, 0, L"你好啊！", lstrlen(L"你好啊！"));
		EndPaint(hWnd, &ps);*/

		//2.使用GetDC获取客户区DC，它并不能将无效区域变成有效,所以WM_PAINT一直发送，文字一直闪烁
		/*
		HDC  hdc = GetDC(hWnd);
		TextOut(hdc, 0, 0, L"你好啊！", lstrlen(L"你好啊！"));
		ReleaseDC(hWnd, hdc);
		//return 0; //去掉之后交给默认DefWindowProc处理WM_PAINT消息，会调用BeginPaint，EndPaint
		*/ 

	}
	break;

    case WM_NCPAINT:
	{
		//3.获取整个窗口的DC，包括标题栏，工具条等
		HDC  hdc = GetWindowDC(hWnd);
		RECT  r = {0,0,400,20};
		HBRUSH  brh = CreateSolidBrush(RGB(255, 0, 0));
		FillRect(hdc, &r, brh);
		DeleteObject(brh);
		ReleaseDC(hWnd, hdc);//释放掉DC
		return  true;


	}break;

	}

	return DefWindowProc(hWnd, Msg, wParam, lParam);
}


int  WINAPI   WinMain(HINSTANCE  hInstance, HINSTANCE  hPrevInstance,
	LPSTR lpCmdLine, int  nShowCmd)
{

	//1.注册窗口类
	WNDCLASS  wnd;
	wnd.cbClsExtra = 0;
	wnd.cbWndExtra = 0;
	wnd.hbrBackground = (HBRUSH)(GetStockObject(GRAY_BRUSH));//背景色
	wnd.hCursor = LoadCursor(NULL, IDC_ARROW);//光标
	wnd.hIcon = LoadIcon(NULL, IDI_APPLICATION);//图标
												//wnd.lpfnWndProc = DefWindowProc;//默认窗口过程函数，用于处理消息
	wnd.lpfnWndProc = MyWindowProc;//自定义的窗口过程函数
	wnd.lpszClassName = L"MrHuang";//窗口类名
	wnd.lpszMenuName = NULL;//菜单资源名称
	wnd.style = CS_HREDRAW | CS_DBLCLKS;//窗口类、样式
	wnd.hInstance = hInstance;//实例句柄
	RegisterClass(&wnd);

	//创建窗口(返回之前发送WM_CREATE)
	HWND    hWnd = CreateWindow(L"MrHuang", L"第一个窗口程序",
		WS_OVERLAPPEDWINDOW, 100, 100, 400, 400, NULL, NULL, hInstance, NULL);

	//显示窗口
	ShowWindow(hWnd, nShowCmd);
	//更新窗口(发送WM_PAINT)
	UpdateWindow(hWnd);

	//消息循环（收到WM_QUIT消息退出）
	MSG  msg;
	while (GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);//翻译消息
		DispatchMessage(&msg);//分发消息到窗口过程
	}
}
#include<windows.h>
#include<CommCtrl.h> 

//指定清单依赖项，否则无法创建SysLink控件
#pragma comment(linker,"\"/manifestdependency:type='win32' name='Microsoft.Windows.Common-Controls'  \
version = '6.0.0.0' processorArchitecture = '*' publicKeyToken = '6595b64144ccf1df' language = '*'\"")


//自定义的窗口过程
LRESULT  CALLBACK    MyWindowProc(HWND hWnd, UINT Msg,
	WPARAM wParam, LPARAM lParam)
{
	switch (Msg)
	{
	case WM_DESTROY:
		PostQuitMessage(0);//可以使GetMessage返回0    
		return 0; 


	case  WM_NOTIFY:
	{
		//WM_NOTIFY参数的公共头部
		NMHDR  *pHDR = (NMHDR*)lParam;
		if ((pHDR->code == NM_CLICK)  && ( pHDR->idFrom = 111))
		{
			PNMLINK  pLink = (PNMLINK)lParam;
			LITEM  & item = pLink->item;

			if (item.iLink == 0)//第一个<a>标签
			{
				//打开网站item.szUrl;
				ShellExecute(NULL, L"open", item.szUrl, NULL, NULL, SW_SHOW);
			}
			else  if (item.iLink == 1)//第二个<a>标签
			{
				ShellExecute(NULL, L"open", L"https://www.baidu.com", NULL, NULL, SW_SHOW);
			}

		}
	 
	}break;

	case WM_CREATE:
	{ 
		//创建超链接控件
		HWND  hLink = CreateWindow(WC_LINK,
			L"<A  href=\"https://nmwsoft.taobao.com/\">这是超链接</A>我爱中国！<A  id=\"he\"  href=\"hello\">这是第二个超链接</A>", WS_CHILD | WS_VISIBLE,
			30, 30, 200, 30, hWnd, (HMENU)111, GetModuleHandle(NULL), NULL);

	}
	break;

	}

	return DefWindowProc(hWnd, Msg, wParam, lParam);
}


int  WINAPI   WinMain(HINSTANCE  hInstance, HINSTANCE  hPrevInstance,
	LPSTR lpCmdLine, int  nShowCmd)
{

	//1.注册窗口类
	WNDCLASS  wnd;
	wnd.cbClsExtra = 0;
	wnd.cbWndExtra = 0;
	wnd.hbrBackground = (HBRUSH)(GetStockObject(GRAY_BRUSH));//背景色
	wnd.hCursor = LoadCursor(NULL, IDC_ARROW);//光标
	wnd.hIcon = LoadIcon(NULL, IDI_APPLICATION);//图标
												//wnd.lpfnWndProc = DefWindowProc;//默认窗口过程函数，用于处理消息
	wnd.lpfnWndProc = MyWindowProc;//自定义的窗口过程函数
	wnd.lpszClassName = L"MrHuang";//窗口类名
	wnd.lpszMenuName = NULL;//菜单资源名称
	wnd.style = CS_HREDRAW | CS_DBLCLKS;//窗口类、样式
	wnd.hInstance = hInstance;//实例句柄
	RegisterClass(&wnd);

	//创建窗口(返回之前发送WM_CREATE)
	HWND    hWnd = CreateWindow(L"MrHuang", L"第一个窗口程序",
		WS_OVERLAPPEDWINDOW, 100, 100, 400, 400, NULL, NULL, hInstance, NULL);

	//显示窗口
	ShowWindow(hWnd, nShowCmd);
	//更新窗口(发送WM_PAINT)
	UpdateWindow(hWnd);


	//消息循环（收到WM_QUIT消息退出）
	MSG  msg;
	while (GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);//翻译消息
		DispatchMessage(&msg);//分发消息到窗口过程
	}
}